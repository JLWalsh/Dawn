import math # Lookup moduleSymbol from global env

module example {

    export object Rectangle {
        height: int, # Lookup typesymbol from global env
        width: int # Idem
    }

    export object Circle {
        radius: int # Idem
    }

    export calculateArea(rectangle: Rectangle): float { # Lookup typesymbol Rectangle from module first, then upper scope (global)
        return rectangle.height * rectangle.width
    }

    export calculateArea(circle: Circle): float {
        return math.pow(circle.radius, 2f) * math.PI
    }

}

main() {
   val rectangle = example.Rectangle { 10i, 20i }
   val circle = example.Circle { radius: 20i }
   val mike = example.Circle { radius: 30i } + 20i;

   print(example.calculateArea(rectangle))
   print(example.calculateArea(circle))
}
